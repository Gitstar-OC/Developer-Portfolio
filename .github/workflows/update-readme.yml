name: Update README

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Update README
      run: |
        # Create a script to read designers data and update README
        cat > update-readme.js << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        console.log('Current directory:', process.cwd());
        console.log('Files in directory:', fs.readdirSync('.'));
        
        // Find the designers file
        const designersFilePath = './web/app/designers.ts';
        const readmeFilePath = './README.md';
        
        if (!fs.existsSync(designersFilePath)) {
          console.error(`Designers file not found at ${designersFilePath}`);
          process.exit(1);
        }
        
        if (!fs.existsSync(readmeFilePath)) {
          console.error(`README file not found at ${readmeFilePath}`);
          process.exit(1);
        }
        
        // Read the designers.ts file
        const fileContent = fs.readFileSync(designersFilePath, 'utf8');
        
        // Extract the designers array section
        const designersArrayMatch = fileContent.match(/export const designers: Designer\[\] = \[([\s\S]*?)\];/);
        if (!designersArrayMatch) {
          console.error('Could not find designers array in the file');
          process.exit(1);
        }
        
        const designersArrayContent = designersArrayMatch[1];
        
        // Extract individual designer objects
        const designerObjects = [];
        const designerRegex = /{([^{}]*)}/g;
        let match;
        
        while ((match = designerRegex.exec(designersArrayContent)) !== null) {
          const designerContent = match[1];
          
          // Extract properties from each designer object
          const nameMatch = designerContent.match(/name:\s*["']([^"']+)["']/);
          const twitterMatch = designerContent.match(/twitter:\s*["']([^"']+)["']/);
          const portfolioMatch = designerContent.match(/portfolio:\s*["']([^"']+)["']/);
          const githubMatch = designerContent.match(/github:\s*["']?([^"',}]+)["']?/);
          
          if (nameMatch && twitterMatch && portfolioMatch) {
            designerObjects.push({
              name: nameMatch[1],
              twitter: twitterMatch[1],
              portfolio: portfolioMatch[1],
              github: githubMatch ? githubMatch[1] : null
            });
          }
        }
        
        console.log(`Found ${designerObjects.length} designers`);
        
        if (designerObjects.length === 0) {
          console.error('No designers found in the file. Check regex pattern.');
          
          // Print part of the file content for debugging
          console.log('File content preview:');
          console.log(fileContent.substring(0, 500));
          process.exit(1);
        }
        
        // Read the README file
        let readme = fs.readFileSync(readmeFilePath, 'utf8');
        
        // Create the new list of designers for the README
        const designersList = designerObjects.map(designer => {
          try {
            const portfolioUrl = new URL(designer.portfolio);
            return ` - [${designer.name}](https://x.com/${designer.twitter}) - [${portfolioUrl.hostname}](${designer.portfolio})`;
          } catch (e) {
            console.error(`Error with URL for ${designer.name}: ${designer.portfolio}`);
            return ` - [${designer.name}](https://x.com/${designer.twitter}) - [${designer.portfolio}](${designer.portfolio})`;
          }
        }).join('\n');
        
        // Replace the list in the README
        const startMarker = '# Great_Desfolio\n\nList of great engineers and their portfolio sites. \n\n';
        const newReadme = startMarker + designersList;
        
        // Write the updated README
        fs.writeFileSync(readmeFilePath, newReadme);
        console.log('README updated successfully!');
        EOF
        
        node update-readme.js
        
    - name: Commit and push if changed
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add README.md
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update README with latest designers" && git push)